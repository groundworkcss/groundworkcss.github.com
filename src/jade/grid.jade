extends template
  
block head
  title GroundworkCSS â™¥ Responsive Grid System
  
block content
  .container
    .row
      .one.third.padded
        h1
          i.icon-th
          |  Grid System
        p
          | The GroundworkCSS grid system supports a variable number of columns per row and supports fractions from halves through twelfths out of the box. Column widths can be specifed with classes (i.e. 
          code one half
          | , 
          code three fourths
          | , or 
          code two fifths
          | ) or without classes using 
          a(href='http://sass-lang.com/docs/yardoc/file.SASS_REFERENCE.html#extend', target='_blank') @extend
          |  with
          a(href='http://sass-lang.com/docs/yardoc/file.SASS_REFERENCE.html#placeholder_selectors_', target='_blank') placeholder selectors
          |  to achieve pure semantic implementations.
        h6 Example usage:
        script(src='https://gist.github.com/ghepting/5282665.js')
        noscript
          p.error.callout Javascript is required to display Gist from Github
        h6 Result:
        .demo
          .row
            .two.thirds 1st
            .one.third 2nd
        hr
        h4.double.gap-top Responsive Adjustments
        p
          | By default, columns collapse into seperate rows when viewport width is below 768 pixels. To achieve column layouts on smaller screens, you can apply 
          code small-tablet
          |  or 
          code mobile
          | .
        h6 Example usage:
        script(src='https://gist.github.com/ghepting/5282668.js')
        noscript
          p.error.callout Javascript is required to display Gist from Github
        h6 Result:
        .demo
          .row
            .one.mobile.half 1st
            .one.mobile.half 2nd
        p.small
          | Note: Resizing the viewport to mobile proportions will not collapse these columns.
        hr
        h4.double.gap-top Equal Height Columns
        p
          | Equal height columns without using a 
          code &lt;table&gt;
          |  is something that is unexpectedly difficult to achieve with CSS in its current state. GroundworkCSS comes with a helpful, lightweight Javascript component that makes this easy.
        h6 Example Usage:
        script(src='https://gist.github.com/ghepting/5285384.js')
        noscript
          p.error.callout Javascript is required to display Gist from Github
        h6 Result:
        .equal-columns.demo
          .row.equalize
            .one.half
              h1 Column One
            .one.half
              h1 Column Two
              p With some extra stuff
      .two.thirds.padded
        // start demo grid
        h2 Semantic, Fractional Column Sizing
        p
          | One of the key features of GroundworkCSS is the responsive, fractions-based, nestable fluid grid system. Utilizing semantic class names and boasting built-in support for purely semantic implementations using selector inheritance (
          code @extend
          | ) and mixins (
          code @include
          | ), the grid system has been engineered to be the last grid you will ever need. You can easily optimize it to fit your specific needs and customize the range of fractions that it supports. There are three variable strings in the
          code
            a(href='https://github.com/groundworkcss/groundwork/blob/master/src/scss/base/_grid.scss', target='_blank') src/scss/base/_grid.scsss
          |  file that you can modify:
        script(src='https://gist.github.com/ghepting/5311695.js')
        noscript
          p.error.callout Javascript is required to display Gist from Github
        p
          | By default, the grid system supports
          em wholes
          | through
          em twelfths
          | to achieve a high level of flexibility. However, it is highly recommended that you fine tune it to the specific needs of each project. If you only use thirds, for example, removing the unused numerators/denominators will greatly reduce the output CSS filesize. Note that these space-delimited string variables are used as arrays and are looped through, so having the proper numerators (
          code $numbers
          | ) and denominators (
          code $fractions
          | &
          code $fractions_plural
          | ) for each fractional step in the total range is required.
        hr
        .demo
          h4 Halves
          .row
            .one.half 1/2
            .one.half 1/2
          hr
          h4 Thirds
          .row
            .one.third 1/3
            .one.third 1/3
            .one.third 1/3
          .row
            .one.third 1/3
            .two.thirds 2/3
          hr
          h4 Fourths
          .row
            .one.fourth 1/4
            .two.fourths 2/4
            .one.fourth 1/4
          .row
            .one.fourth 1/4
            .three.fourths 3/4
          hr
          h4 Fifths
          .row
            .one.fifth 1/5
            .three.fifths 3/5
            .one.fifth 1/5
          .row
            .one.fifth 1/5
            .four.fifths 4/5
          hr
          h4 Sixths
          .row
            .one.sixth 1/6
            .two.sixths 2/6
            .three.sixths 3/6
          .row
            .one.sixth 1/6
            .five.sixths 5/6
          hr
          h4 Sevenths
          .row
            .one.seventh 1/7
            .two.sevenths 2/7
            .four.sevenths 4/7
          .row
            .one.seventh 1/7
            .six.sevenths 6/7
          hr
          h4 Eighths
          .row
            .one.eighth 1/8
            .three.eighths 3/8
            .four.eighths 4/8
          .row
            .one.eighth 1/8
            .seven.eighths 7/8
          hr
          h4 Ninths
          .row
            .one.ninth 1/9
            .three.ninth 3/9
            .five.ninths 5/9
          .row
            .one.ninth 1/9
            .eight.ninths 8/9
          hr
          h4 Tenths
          .row
            .one.tenth 1/10
            .three.tenths 3/10
            .six.tenths 6/10
          .row
            .one.tenth 1/10
            .nine.tenths 9/10
          hr
          h4 Elevenths
          .row
            .one.eleventh 1/11
            .three.elevenths 3/11
            .seven.elevenths 7/11
          .row
            .one.eleventh 1/11
            .ten.elevenths 10/11
          hr
          h4 Twelfths
          .row
            .one.twelfth 1/12
            .three.twelfths 3/12
            .eight.twelfths 8/12
          .row
            .one.twelfth 1/12
            .eleven.twelfths 11/12
        hr
        h2 Small Tablets Grid
        p
          | By default, the grid columns will collapse into individual rows when the viewport is below 768 pixles wide. Using the 
          code small-tablet
          |  modifier, you can specify columns to maintain their grid structure until the viewport width falls below 480 pixels.
        .demo
          .row
            .one.small-tablet.third 1/3
            .one.small-tablet.third 1/3
            .one.small-tablet.third 1/3
          .row
            .one.small-tablet.fourth 1/4
            .two.small-tablet.fourths 2/4
            .one.small-tablet.fourth 1/4
          .row
            .one.small-tablet.fifth 1/5
            .three.small-tablet.fifths 3/5
            .one.small-tablet.fifth 1/5
          .row
            .three.small-tablet.fourths 3/4
            .one.small-tablet.fourth 1/4
          .row
            .one.small-tablet.half 1/2
            .one.small-tablet.half 1/2
          .row
            .one.small-tablet.seventh 1/7
            .five.small-tablet.sevenths 5/7
            .one.small-tablet.seventh 1/7
          .row
            .three.small-tablet.tenths 3/10
            .five.small-tablet.tenths 5/10
            .two.small-tablet.tenths 2/10
        hr
        h2 Mobile Grid
        p
          | Using the 
          code mobile
          |  modifier maintains the grid column structure at all viewport sizes.
        #mobilegriddemo.demo
          .row
            .four.mobile.twelfths 1/3
            .four.mobile.twelfths 1/3
            .four.mobile.twelfths 1/3
          .row
            .three.mobile.twelfths 1/4
            .six.mobile.twelfths 1/2
            .three.mobile.twelfths 1/4
          .row
            .three.mobile.twelfths 1/4
            .three.mobile.twelfths 1/4
            .three.mobile.twelfths 1/4
            .three.mobile.twelfths 1/4
          .row
            .nine.mobile.twelfths 3/4
            .three.mobile.twelfths 1/4
          .row
            .eight.mobile.twelfths 2/3
            .four.mobile.twelfths 1/3
          .row
            .six.mobile.twelfths 1/2
            .six.mobile.twelfths 1/2
          .row
            .four.mobile.twelfths 1/3
            .eight.mobile.twelfths 2/3
          .row
            .three.mobile.twelfths 1/4
            .nine.mobile.twelfths 3/4
          .row
            .one.mobile.fifth 1/5
            .three.mobile.fifths 3/5
            .one.mobile.fifth 1/5
          .row
            .one.mobile.seventh 1/7
            .five.mobile.sevenths 5/7
            .one.mobile.seventh 1/7
        hr
        h2 Re-ordering
        p
          | Re-ordering or "source ordering" is an especially useful modifier when you want content on the right on larger viewports, but on top on mobile viewports. This can be especially applicable when optimizing content for search engines and accessibility. For example, you can relatively adjust columns positioning by using 
          code right-one
          |  or
          code left-three
          | .
        .reordering.demo
          .row
            .one.fifth.right-four 1/5 (first)
            .four.fifths.left-one 4/5 (last)
          .row
            .two.thirds.right-one 2/3 (first)
            .one.third.left-two 1/3 (last)
          .row
            .one.fourth.right-two 1/4 (first)
            .one.fourth.left-one 1/4 (second)
            .one.fourth.right-one 1/4 (third)
            .one.fourth.left-two 1/4 (fourth)
          .row
            .three.eighths.right-five 3/8 (first)
            .two.eighths.left-three 2/8 (second)
            .three.eighths.left-three 3/8 (third)
        hr
        h2 Centering
        p
          | When using "orphaned" columns that do not expand 100% of a row, the 
          code centered
          |  modifier can be used to center the column.
        .centering.demo
          .row
            .one.centered.mobile.seventh 1/7
          .row
            .one.centered.mobile.fifth 1/5
          .row
            .one.centered.mobile.third 1/3
        hr
        h2 Offsetting
        p
          | When you want "gaps" between columns, you can skip columns using 
          code skip-one
          | , 
          code skip-two
          | , etc.
        .offsetting.demo
          .row
            .eleven.mobile.twelfths.skip-one 11
          .row
            .ten.mobile.twelfths.skip-two 10
          .row
            .nine.mobile.twelfths.skip-three 9
          .row
            .eight.mobile.twelfths.skip-four 8
          .row
            .seven.mobile.twelfths.skip-five 7
          .row
            .six.mobile.twelfths.skip-six 6
          .row
            .one.mobile.twelfth 1
            .five.mobile.twelfths.skip-six 5
          .row
            .two.mobile.twelfths 2
            .four.mobile.twelfths.skip-six 4
          .row
            .three.mobile.twelfths 3
            .three.mobile.twelfths.skip-six 3
          .row
            .four.mobile.twelfths 4
            .two.mobile.twelfths.skip-six 2
          .row
            .five.mobile.twelfths 5
            .one.mobile.twelfth.skip-six 1
          .row
            .four.mobile.fifths.skip-one 4/5
          .row
            .eight.mobile.elevenths.skip-three 8/11
          .row
            .five.mobile.sevenths.skip-two 5/7
        hr
        h2 Equal Height Columns
        p
          | Equal height columns can be achieved by adding the 
          code equalize
          |  modifier class to a 
          code row
          | . This uses Javascript to detect the tallest column within that row and apply that height to each additional column within it. NOTE: Semantic support for this feature is currently not available as the Javascript component relies on the class to trigger this functionality.
        .equal-columns.demo
          .equalize.row
            .one.small-tablet.third.padded
              h1 First Column
              p
                | Pellentesque habitant morbi tristique senectus et netus et malesuada fames ac turpis egestas. Vestibulum tortor quam, feugiat vitae, ultricies eget, tempor sit amet, ante. Donec eu libero sit amet quam egestas semper. Aenean ultricies mi vitae est. Mauris placerat eleifend leo.
            .one.small-tablet.third.padded
              h1 Second Column
              p
                | Pellentesque habitant morbi tristique senectus et netus et malesuada fames ac turpis egestas. Vestibulum tortor quam, feugiat vitae, ultricies eget, tempor sit amet, ante. Donec eu libero sit amet quam egestas semper. Aenean ultricies mi vitae est. Mauris placerat eleifend leo. Quisque sit amet est et sapien ullamcorper pharetra. Vestibulum erat wisi, condimentum sed, commodo vitae, ornare sit amet, wisi. Aenean fermentum, elit eget tincidunt condimentum, eros ipsum rutrum orci, sagittis tempus lacus enim ac dui. Donec non enim in turpis pulvinar facilisis. Ut felis. Praesent dapibus, neque id cursus faucibus, tortor neque egestas augue, eu vulputate magna eros eu erat. Aliquam erat volutpat. Nam dui mi, tincidunt quis, accumsan porttitor, facilisis luctus, metus
            .one.small-tablet.third.padded
              h1 Third Column
              p
                | Pellentesque habitant morbi tristique senectus et netus et malesuada fames ac turpis egestas.
        hr
        h2 Next Up: Media Queries
        p
          a(href='./media-queries') Media Queries
          | contain CSS code that is conditionally applied based on viewport dimensions and other qualifying conditions and are what make the GroundworkCSS grid system responsive.
        p
          a.button(href='./media-queries')
            | Read More 
            i.icon-chevron-right
